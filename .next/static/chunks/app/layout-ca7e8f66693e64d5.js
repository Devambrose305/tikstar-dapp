(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[185],{9690:function(t,e,n){Promise.resolve().then(n.t.bind(n,3385,23)),Promise.resolve().then(n.bind(n,7451)),Promise.resolve().then(n.bind(n,716))},2829:function(t,e,n){"use strict";n.d(e,{ti:function(){return i},xk:function(){return r}});let r={TESTNET:{TUSDT:"0xfA6d5d51bc2f5868B9f2A5Df217554697218605F",TTSC:"0x3efdEB8EE99EC221e8b4610489eEaF22D512cD10",LOGIC:"0x715d6D1a0879998b3f1b1A490D0c28942aB294ce"}},i={JOIN_EXPERT:"joinExpert",ACCEPT_INVITATION:"acceptInvitation",BUY_TSC:"buy",GET_EXPERT_SIZE:"getExpertSize",GET_EXPERT_INFO:"getExpertInfo",GET_INVITATION_SIZE:"getInvitationSize",GET_INVITATION_INFO:"getInvitationInfo",GET_BRAND_SIZE:"getBrandSize",GET_BRAND_INFO:"getBrandInfo"}},7451:function(t,e,n){"use strict";n.r(e),n.d(e,{UserProvider:function(){return o},useUser:function(){return s}});var r=n(3827),i=n(4090);let a=(0,i.createContext)(void 0),o=t=>{let{children:e}=t,[n,o]=(0,i.useState)(null);return(0,r.jsx)(a.Provider,{value:{user:n,setUser:o},children:e})},s=()=>{let t=(0,i.useContext)(a);if(!t)throw Error("useUser must be used within a UserProvider");return t}},716:function(t,e,n){"use strict";n.r(e),n.d(e,{ContractProvider:function(){return l},useContractContext:function(){return d}});var r=n(3827),i=n(4090),a=n(4344),o=n(2829);class s{initializeContract(t){try{this.contract=new this.web3.eth.Contract(t,o.xk.TESTNET.LOGIC)}catch(t){console.error("Failed to initialize contract:",t)}}async joinExpert(t,e){try{if(!this.contract)throw Error("Contract not initialized");let n=await this.web3.eth.getAccounts();return await this.contract.methods[o.ti.JOIN_EXPERT](t,e).send({from:n[0]}),!0}catch(t){return console.error("Failed to join as expert:",t),!1}}async getExpertSize(){try{if(!this.contract)throw Error("Contract not initialized");let t=await this.contract.methods[o.ti.GET_EXPERT_SIZE]().call();return Number(t)}catch(t){return console.error("Failed to get expert size:",t),0}}async getExpertInfo(){try{if(!this.contract)throw Error("Contract not initialized");return await this.contract.methods[o.ti.GET_EXPERT_INFO]().call()}catch(t){return console.error("Failed to get expert info:",t),[]}}async acceptInvitation(t){try{if(!this.contract)throw Error("Contract not initialized");let e=await this.web3.eth.getAccounts();return await this.contract.methods[o.ti.ACCEPT_INVITATION](t).send({from:e[0]}),!0}catch(t){return console.error("Failed to accept invitation:",t),!1}}async getInvitationSize(t){try{if(!this.contract)throw Error("Contract not initialized");let e=await this.contract.methods[o.ti.GET_INVITATION_SIZE](t).call();return Number(e)}catch(t){return console.error("Failed to get invitation size:",t),0}}async getInvitationInfo(t){try{if(!this.contract)throw Error("Contract not initialized");return await this.contract.methods[o.ti.GET_INVITATION_INFO](t).call()}catch(t){return console.error("Failed to get invitation info:",t),[]}}async getBrandSize(){try{if(!this.contract)throw Error("Contract not initialized");let t=await this.contract.methods[o.ti.GET_BRAND_SIZE]().call();return Number(t)}catch(t){return console.error("Failed to get brand size:",t),0}}async getBrandInfo(){try{if(!this.contract)throw Error("Contract not initialized");return await this.contract.methods[o.ti.GET_BRAND_INFO]().call()}catch(t){return console.error("Failed to get brand info:",t),[]}}async buyTSC(t){try{if(!this.contract)throw Error("Contract not initialized");let e=await this.web3.eth.getAccounts();return await this.contract.methods[o.ti.BUY_TSC](t).send({from:e[0]}),!0}catch(t){return console.error("Failed to buy TSC:",t),!1}}constructor(t,e){this.web3=new a.ZPm(t),this.contract=null,this.initializeContract(e)}}var c=JSON.parse('[{"inputs":[{"internalType":"string","name":"tikTokId","type":"string"},{"internalType":"string","name":"email","type":"string"}],"name":"joinExpert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"upAddress","type":"address"}],"name":"acceptInvitation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"buy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getExpertSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getExpertInfo","outputs":[{"components":[{"internalType":"string","name":"tikTokId","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"address","name":"_add","type":"address"}],"internalType":"struct TikStarCoin.Expert[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"address","type":"address"}],"name":"getInvitationSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"address","type":"address"}],"name":"getInvitationInfo","outputs":[{"components":[{"internalType":"address","name":"_add","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct TikStarCoin.UserBuy[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBrandSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBrandInfo","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"remarks","type":"string"},{"internalType":"string","name":"logo","type":"string"}],"internalType":"struct TikStarCoin.Brand[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"}]');let u=(0,i.createContext)({contractService:null,error:null});function l(t){let{children:e}=t,[n,l]=(0,i.useState)(null),[d,p]=(0,i.useState)(null);return(0,i.useEffect)(()=>((async()=>{try{if(void 0===window.ethereum)throw Error("Please install MetaMask to use this application");let t=await window.ethereum.request({method:"eth_requestAccounts"});if(!t||0===t.length)throw Error("Please connect your MetaMask wallet");let e=await window.ethereum.request({method:"eth_chainId"});if(97!==parseInt(e,16))throw Error("Please switch to BSC Testnet (Chain ID: 97)");let n=new a.ZPm(window.ethereum),r=new s(window.ethereum,c),i=await n.eth.getCode(o.xk.TESTNET.LOGIC);if("0x"===i||"0x0"===i)throw Error("Contract not deployed at specified address");l(r),p(null)}catch(t){p(t instanceof Error?t.message:"Failed to initialize contract service"),console.error("Contract initialization error:",t)}})(),window.ethereum&&(window.ethereum.on("chainChanged",()=>{window.location.reload()}),window.ethereum.on("accountsChanged",()=>{window.location.reload()})),()=>{window.ethereum&&(window.ethereum.removeListener("chainChanged",()=>{}),window.ethereum.removeListener("accountsChanged",()=>{}))}),[]),(0,r.jsx)(u.Provider,{value:{contractService:n,error:d},children:e})}function d(){let t=(0,i.useContext)(u);if(void 0===t)throw Error("useContractContext must be used within a ContractProvider");return t}},3385:function(){}},function(t){t.O(0,[714,971,69,744],function(){return t(t.s=9690)}),_N_E=t.O()}]);