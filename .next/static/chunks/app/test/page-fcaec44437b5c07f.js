(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[928],{7990:function(e,t,r){Promise.resolve().then(r.bind(r,9721)),Promise.resolve().then(r.bind(r,8214))},9721:function(e,t,r){"use strict";function n(e){let{reason:t,children:r}=e;return r}Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"BailoutToCSR",{enumerable:!0,get:function(){return n}}),r(9775)},8214:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return d}});var n=r(3827),a=r(4090),i=r(716),o=r(2829),s=r(4344);let c=[{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"}],l={chainId:"0x61",chainName:"BSC Testnet",nativeCurrency:{name:"tBNB",symbol:"tBNB",decimals:18},rpcUrls:["https://data-seed-prebsc-1-s1.binance.org:8545"],blockExplorerUrls:["https://testnet.bscscan.com"]};function d(){let{contractService:e,error:t}=(0,i.useContractContext)(),[r,d]=(0,a.useState)(""),[u,h]=(0,a.useState)(0),[p,m]=(0,a.useState)([]),[g,x]=(0,a.useState)(!1),[y,b]=(0,a.useState)("0"),[T,w]=(0,a.useState)("0"),[f,E]=(0,a.useState)(""),[v,C]=(0,a.useState)(""),[N,S]=(0,a.useState)(""),[k,j]=(0,a.useState)(!1),[I,B]=(0,a.useState)(0),[_,U]=(0,a.useState)(0);if((0,a.useEffect)(()=>{x(!0),window.ethereum&&window.ethereum.request({method:"eth_accounts"}).then(e=>{e.length>0&&d(e[0])})},[]),!g)return null;let D=(e,t,r)=>{m(n=>[...n,{test:e,status:t,message:r}])},z=async e=>{try{let t=await window.ethereum.request({method:"eth_getCode",params:[e,"latest"]});return"0x"!==t}catch(e){return!1}},F=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:18;if(!window.ethereum||!r)return"0";let n=new new s.ZPm(window.ethereum).eth.Contract(c,e);try{let e=await n.methods.balanceOf(r).call();return(Number(e)/Math.pow(10,t)).toString()}catch(e){return console.error("Error checking balance:",e),"0"}},P=async()=>{try{let e=await F(o.xk.TESTNET.TUSDT,18);b(e),D("TUSDT Balance","success","".concat(e," TUSDT"))}catch(e){D("TUSDT Balance","error","Failed to get TUSDT balance: ".concat(e instanceof Error?e.message:"Unknown error"))}try{let e=await F(o.xk.TESTNET.TTSC,18);w(e),D("TSC Balance","success","".concat(e," TSC"))}catch(e){D("TSC Balance","error","Failed to get TSC balance: ".concat(e instanceof Error?e.message:"Unknown error"))}},O=async()=>{if(!window.ethereum)throw Error("MetaMask not installed");try{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:l.chainId}]}),D("Network Switch","success","Successfully switched to BSC Testnet")}catch(e){if(4902===e.code)try{await window.ethereum.request({method:"wallet_addEthereumChain",params:[l]}),D("Network Switch","success","Successfully added and switched to BSC Testnet")}catch(e){throw Error("Failed to add BSC Testnet network")}else throw e}},A=async()=>{m([]);try{if(!window.ethereum)throw Error("MetaMask not installed");let e=await window.ethereum.request({method:"eth_requestAccounts"});d(e[0]),D("MetaMask Connection","success","Connected to wallet: ".concat(e[0]))}catch(e){D("MetaMask Connection","error","Failed to connect: ".concat(e instanceof Error?e.message:"Unknown error"));return}try{let e=await window.ethereum.request({method:"eth_chainId"}),t=parseInt(e,16);97!==t?(D("Network Check","error","Not connected to BSC Testnet. Attempting to switch..."),await O()):D("Network Check","success","Already connected to BSC Testnet")}catch(e){D("Network Check","error","Network error: ".concat(e instanceof Error?e.message:"Unknown error"));return}try{if(!await z(o.xk.TESTNET.TUSDT))throw Error("TUSDT contract not found at specified address");D("TUSDT Contract","success","Verified at ".concat(o.xk.TESTNET.TUSDT)),await P()}catch(e){D("TUSDT Contract","error","Failed to verify: ".concat(e instanceof Error?e.message:"Unknown error"));return}try{if(!await z(o.xk.TESTNET.TTSC))throw Error("TSC contract not found at specified address");D("TSC Contract","success","Verified at ".concat(o.xk.TESTNET.TTSC))}catch(e){D("TSC Contract","error","Failed to verify: ".concat(e instanceof Error?e.message:"Unknown error"));return}try{if(!await z(o.xk.TESTNET.LOGIC))throw Error("Logic contract not found at specified address");D("Logic Contract","success","Verified at ".concat(o.xk.TESTNET.LOGIC))}catch(e){D("Logic Contract","error","Failed to verify: ".concat(e instanceof Error?e.message:"Unknown error"));return}try{if(!e)throw Error("Contract service not initialized");D("Contract Service","success","Contract service initialized successfully")}catch(e){D("Contract Service","error","Contract service error: ".concat(e instanceof Error?e.message:"Unknown error"));return}try{let t=await e.getExpertSize();h(t),D("Get Expert Count","success","Current expert count: ".concat(t))}catch(e){D("Get Expert Count","error","Failed to get expert count: ".concat(e instanceof Error?e.message:"Unknown error"))}},M=async()=>{try{if(j(!0),!e)throw Error("Contract service not initialized");await e.joinExpert(f,v),D("Join Expert","success","Successfully joined as expert with TikTok ID: ".concat(f));let t=await e.getExpertSize();h(t)}catch(e){D("Join Expert","error","Failed to join as expert: ".concat(e instanceof Error?e.message:"Unknown error"))}finally{j(!1)}},G=async()=>{try{if(j(!0),!e)throw Error("Contract service not initialized");let t=new s.ZPm(window.ethereum),n=t.utils.toWei(N,"ether");console.log("Creating TUSDT contract instance...");let a=new t.eth.Contract(c,o.xk.TESTNET.TUSDT);console.log("Approving TUSDT spend...");let i=await a.methods.approve(o.xk.TESTNET.LOGIC,n).send({from:r});console.log("TUSDT approved:",i),D("TUSDT Approval","success","Approved ".concat(N," TUSDT for spending")),console.log("Buying TSC...");let l=await e.buyTSC(n);console.log("Buy transaction:",l),D("Buy TSC","success","Successfully purchased ".concat(N," TSC")),await P()}catch(e){console.error("Buy TSC error:",e),D("Buy TSC","error","Failed to buy TSC: ".concat(e instanceof Error?e.message:"Unknown error"))}finally{j(!1)}},L=async()=>{try{if(j(!0),!r)throw Error("Please connect your wallet first");let e=new s.ZPm(window.ethereum),t=await e.eth.getChainId();if(97!==Number(t))throw Error("Please switch to BSC Testnet");let n=await e.eth.getBalance(r);if(.01>parseFloat(e.utils.fromWei(n,"ether")))throw Error("Insufficient BNB for gas. Please get test BNB from faucet");let a=new e.eth.Contract([{inputs:[],name:"getTestUSDT",outputs:[],stateMutability:"nonpayable",type:"function"}],o.xk.TESTNET.LOGIC);console.log("Requesting test USDT...");let i=await a.methods.getTestUSDT().send({from:r,gas:"300000",gasPrice:e.utils.toWei("10","gwei")});console.log("TUSDT request transaction:",i),D("TUSDT Faucet","success","Successfully received test TUSDT. Transaction: ".concat(i.transactionHash)),await P()}catch(t){console.error("TUSDT request error:",t);let e="Failed to get test TUSDT: ";t.message.includes("User denied")?e+="Transaction was rejected":t.message.includes("insufficient funds")?e+="Insufficient BNB for gas fees. Please get test BNB first":t.receipt?e+="Contract error. You may need to wait before requesting again":e+=t.message||"Unknown error occurred",D("TUSDT Faucet","error",e)}finally{j(!1)}},q=async()=>{try{if(j(!0),!e)throw Error("Contract service not initialized");let t=await e.getExpertSize();D("Logic: Expert Count","success","Total experts: ".concat(t)),h(t);let n=await e.getBrandSize();if(D("Logic: Brand Count","success","Total brands: ".concat(n)),B(n),r){let t=await e.getInvitationSize(r);D("Logic: Invitation Count","success","Your invitations: ".concat(t)),U(t);let n=(await e.getExpertInfo()).some(e=>e._add.toLowerCase()===r.toLowerCase());D("Logic: Expert Status","success",n?"You are registered as an expert":"You are not registered as an expert")}}catch(e){D("Logic Contract Test","error","Test failed: ".concat(e instanceof Error?e.message:"Unknown error"))}finally{j(!1)}};return(0,n.jsx)("div",{className:"min-h-screen bg-black text-white p-8",children:(0,n.jsxs)("div",{className:"max-w-3xl mx-auto space-y-8",children:[(0,n.jsx)("h1",{className:"text-3xl font-bold bg-gradient-to-r from-brand-cyan to-brand-pink bg-clip-text text-transparent",children:"Web3 Integration Test"}),(0,n.jsxs)("div",{className:"grid grid-cols-2 gap-4",children:[(0,n.jsxs)("div",{className:"p-4 rounded-lg border border-brand-cyan/20 bg-black/50",children:[(0,n.jsx)("div",{className:"text-sm text-gray-400",children:"TUSDT Balance"}),(0,n.jsxs)("div",{className:"text-xl font-bold text-brand-cyan",children:[y," TUSDT"]}),(0,n.jsx)("button",{onClick:L,disabled:k,className:"mt-2 px-4 py-2 bg-brand-cyan/20 hover:bg-brand-cyan/30 text-brand-cyan text-sm rounded-lg transition-colors w-full disabled:opacity-50",children:k?"Requesting...":"Get Test TUSDT"})]}),(0,n.jsxs)("div",{className:"p-4 rounded-lg border border-brand-pink/20 bg-black/50",children:[(0,n.jsx)("div",{className:"text-sm text-gray-400",children:"TSC Balance"}),(0,n.jsxs)("div",{className:"text-xl font-bold text-brand-pink",children:[T," TSC"]})]})]}),(0,n.jsx)("div",{className:"space-y-8",children:(0,n.jsxs)("div",{className:"relative group",children:[(0,n.jsx)("div",{className:"absolute -inset-0.5 bg-gradient-to-r from-brand-cyan to-brand-pink rounded-xl blur opacity-75"}),(0,n.jsxs)("div",{className:"relative bg-black/50 backdrop-blur-sm border border-white/10 rounded-xl p-8",children:[(0,n.jsx)("h2",{className:"text-2xl font-bold text-white mb-6",children:"Test Contract Interactions"}),(0,n.jsxs)("div",{className:"space-y-4 mb-8",children:[(0,n.jsx)("h3",{className:"text-xl font-bold text-brand-cyan",children:"Join as Expert"}),(0,n.jsxs)("div",{className:"grid grid-cols-2 gap-4",children:[(0,n.jsx)("input",{type:"text",placeholder:"TikTok ID",value:f,onChange:e=>E(e.target.value),className:"px-4 py-2 bg-black/50 border border-white/10 rounded-lg text-white"}),(0,n.jsx)("input",{type:"email",placeholder:"Email",value:v,onChange:e=>C(e.target.value),className:"px-4 py-2 bg-black/50 border border-white/10 rounded-lg text-white"})]}),(0,n.jsxs)("button",{onClick:M,disabled:k||!f||!v,className:"relative group w-full disabled:opacity-50",children:[(0,n.jsx)("div",{className:"absolute -inset-0.5 bg-gradient-to-r from-brand-cyan to-brand-pink rounded-lg blur opacity-60 group-hover:opacity-100 transition"}),(0,n.jsx)("div",{className:"relative px-8 py-4 bg-black rounded-lg leading-none flex items-center justify-center",children:(0,n.jsx)("span",{className:"text-xl font-medium text-white",children:k?"Processing...":"Join as Expert"})})]})]}),(0,n.jsxs)("div",{className:"space-y-4",children:[(0,n.jsx)("h3",{className:"text-xl font-bold text-brand-pink",children:"Buy TSC"}),(0,n.jsx)("input",{type:"number",placeholder:"Amount of TSC to buy",value:N,onChange:e=>S(e.target.value),className:"w-full px-4 py-2 bg-black/50 border border-white/10 rounded-lg text-white"}),(0,n.jsxs)("button",{onClick:G,disabled:k||!N||0>=Number(N),className:"relative group w-full disabled:opacity-50",children:[(0,n.jsx)("div",{className:"absolute -inset-0.5 bg-gradient-to-r from-brand-cyan to-brand-pink rounded-lg blur opacity-60 group-hover:opacity-100 transition"}),(0,n.jsx)("div",{className:"relative px-8 py-4 bg-black rounded-lg leading-none flex items-center justify-center",children:(0,n.jsx)("span",{className:"text-xl font-medium text-white",children:k?"Processing...":"Buy TSC"})})]})]})]})]})}),(0,n.jsx)("div",{className:"space-y-4",children:(0,n.jsxs)("button",{onClick:O,className:"relative group w-full",children:[(0,n.jsx)("div",{className:"absolute -inset-0.5 bg-gradient-to-r from-brand-cyan to-brand-pink rounded-lg blur opacity-60 group-hover:opacity-100 transition"}),(0,n.jsx)("div",{className:"relative px-8 py-4 bg-black rounded-lg leading-none flex items-center justify-center",children:(0,n.jsx)("span",{className:"text-xl font-medium text-white",children:"Switch to BSC Testnet"})})]})}),(0,n.jsx)("div",{className:"text-center",children:(0,n.jsx)("a",{href:"https://testnet.binance.org/faucet-smart",target:"_blank",rel:"noopener noreferrer",className:"text-brand-cyan hover:text-brand-pink transition-colors",children:"Get Test BNB from Faucet"})}),(0,n.jsx)("div",{className:"space-y-4",children:(0,n.jsxs)("button",{onClick:A,className:"relative group w-full",children:[(0,n.jsx)("div",{className:"absolute -inset-0.5 bg-gradient-to-r from-brand-cyan to-brand-pink rounded-lg blur opacity-60 group-hover:opacity-100 transition"}),(0,n.jsx)("div",{className:"relative px-8 py-4 bg-black rounded-lg leading-none flex items-center justify-center",children:(0,n.jsx)("span",{className:"text-xl font-medium text-white",children:"Run Tests"})})]})}),(0,n.jsx)("div",{className:"space-y-4",children:p.map((e,t)=>(0,n.jsxs)("div",{className:"p-4 rounded-lg border ".concat("success"===e.status?"border-green-500/50 bg-green-500/10":"border-red-500/50 bg-red-500/10"),children:[(0,n.jsx)("div",{className:"font-medium mb-1",children:e.test}),(0,n.jsx)("div",{className:"text-sm ".concat("success"===e.status?"text-green-400":"text-red-400"),children:e.message})]},t))}),t&&(0,n.jsxs)("div",{className:"p-4 rounded-lg border border-red-500/50 bg-red-500/10",children:[(0,n.jsx)("div",{className:"font-medium text-red-400",children:"Contract Error"}),(0,n.jsx)("div",{className:"text-sm text-red-400",children:t})]}),(0,n.jsx)("div",{className:"space-y-8",children:(0,n.jsxs)("div",{className:"relative group",children:[(0,n.jsx)("div",{className:"absolute -inset-0.5 bg-gradient-to-r from-brand-cyan to-brand-pink rounded-xl blur opacity-75"}),(0,n.jsxs)("div",{className:"relative bg-black/50 backdrop-blur-sm border border-white/10 rounded-xl p-8",children:[(0,n.jsx)("h2",{className:"text-2xl font-bold text-white mb-6",children:"Logic Contract Status"}),(0,n.jsxs)("div",{className:"grid grid-cols-3 gap-4 mb-6",children:[(0,n.jsxs)("div",{className:"p-4 rounded-lg border border-brand-cyan/20 bg-black/50",children:[(0,n.jsx)("div",{className:"text-sm text-gray-400",children:"Total Experts"}),(0,n.jsx)("div",{className:"text-xl font-bold text-brand-cyan",children:u})]}),(0,n.jsxs)("div",{className:"p-4 rounded-lg border border-brand-pink/20 bg-black/50",children:[(0,n.jsx)("div",{className:"text-sm text-gray-400",children:"Total Brands"}),(0,n.jsx)("div",{className:"text-xl font-bold text-brand-pink",children:I})]}),(0,n.jsxs)("div",{className:"p-4 rounded-lg border border-white/20 bg-black/50",children:[(0,n.jsx)("div",{className:"text-sm text-gray-400",children:"Your Invitations"}),(0,n.jsx)("div",{className:"text-xl font-bold text-white",children:_})]})]}),(0,n.jsxs)("button",{onClick:q,disabled:k,className:"relative group w-full disabled:opacity-50",children:[(0,n.jsx)("div",{className:"absolute -inset-0.5 bg-gradient-to-r from-brand-cyan to-brand-pink rounded-lg blur opacity-60 group-hover:opacity-100 transition"}),(0,n.jsx)("div",{className:"relative px-8 py-4 bg-black rounded-lg leading-none flex items-center justify-center",children:(0,n.jsx)("span",{className:"text-xl font-medium text-white",children:k?"Testing...":"Test Logic Contract"})})]})]})]})})]})})}},2829:function(e,t,r){"use strict";r.d(t,{ti:function(){return a},xk:function(){return n}});let n={TESTNET:{TUSDT:"0xfA6d5d51bc2f5868B9f2A5Df217554697218605F",TTSC:"0x3efdEB8EE99EC221e8b4610489eEaF22D512cD10",LOGIC:"0x715d6D1a0879998b3f1b1A490D0c28942aB294ce"}},a={JOIN_EXPERT:"joinExpert",ACCEPT_INVITATION:"acceptInvitation",BUY_TSC:"buy",GET_EXPERT_SIZE:"getExpertSize",GET_EXPERT_INFO:"getExpertInfo",GET_INVITATION_SIZE:"getInvitationSize",GET_INVITATION_INFO:"getInvitationInfo",GET_BRAND_SIZE:"getBrandSize",GET_BRAND_INFO:"getBrandInfo"}},716:function(e,t,r){"use strict";r.r(t),r.d(t,{ContractProvider:function(){return d},useContractContext:function(){return u}});var n=r(3827),a=r(4090),i=r(4344),o=r(2829);class s{initializeContract(e){try{this.contract=new this.web3.eth.Contract(e,o.xk.TESTNET.LOGIC)}catch(e){console.error("Failed to initialize contract:",e)}}async joinExpert(e,t){try{if(!this.contract)throw Error("Contract not initialized");let r=await this.web3.eth.getAccounts();return await this.contract.methods[o.ti.JOIN_EXPERT](e,t).send({from:r[0]}),!0}catch(e){return console.error("Failed to join as expert:",e),!1}}async getExpertSize(){try{if(!this.contract)throw Error("Contract not initialized");let e=await this.contract.methods[o.ti.GET_EXPERT_SIZE]().call();return Number(e)}catch(e){return console.error("Failed to get expert size:",e),0}}async getExpertInfo(){try{if(!this.contract)throw Error("Contract not initialized");return await this.contract.methods[o.ti.GET_EXPERT_INFO]().call()}catch(e){return console.error("Failed to get expert info:",e),[]}}async acceptInvitation(e){try{if(!this.contract)throw Error("Contract not initialized");let t=await this.web3.eth.getAccounts();return await this.contract.methods[o.ti.ACCEPT_INVITATION](e).send({from:t[0]}),!0}catch(e){return console.error("Failed to accept invitation:",e),!1}}async getInvitationSize(e){try{if(!this.contract)throw Error("Contract not initialized");let t=await this.contract.methods[o.ti.GET_INVITATION_SIZE](e).call();return Number(t)}catch(e){return console.error("Failed to get invitation size:",e),0}}async getInvitationInfo(e){try{if(!this.contract)throw Error("Contract not initialized");return await this.contract.methods[o.ti.GET_INVITATION_INFO](e).call()}catch(e){return console.error("Failed to get invitation info:",e),[]}}async getBrandSize(){try{if(!this.contract)throw Error("Contract not initialized");let e=await this.contract.methods[o.ti.GET_BRAND_SIZE]().call();return Number(e)}catch(e){return console.error("Failed to get brand size:",e),0}}async getBrandInfo(){try{if(!this.contract)throw Error("Contract not initialized");return await this.contract.methods[o.ti.GET_BRAND_INFO]().call()}catch(e){return console.error("Failed to get brand info:",e),[]}}async buyTSC(e){try{if(!this.contract)throw Error("Contract not initialized");let t=await this.web3.eth.getAccounts();return await this.contract.methods[o.ti.BUY_TSC](e).send({from:t[0]}),!0}catch(e){return console.error("Failed to buy TSC:",e),!1}}constructor(e,t){this.web3=new i.ZPm(e),this.contract=null,this.initializeContract(t)}}var c=JSON.parse('[{"inputs":[{"internalType":"string","name":"tikTokId","type":"string"},{"internalType":"string","name":"email","type":"string"}],"name":"joinExpert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"upAddress","type":"address"}],"name":"acceptInvitation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"buy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getExpertSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getExpertInfo","outputs":[{"components":[{"internalType":"string","name":"tikTokId","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"address","name":"_add","type":"address"}],"internalType":"struct TikStarCoin.Expert[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"address","type":"address"}],"name":"getInvitationSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"address","type":"address"}],"name":"getInvitationInfo","outputs":[{"components":[{"internalType":"address","name":"_add","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct TikStarCoin.UserBuy[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBrandSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBrandInfo","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"remarks","type":"string"},{"internalType":"string","name":"logo","type":"string"}],"internalType":"struct TikStarCoin.Brand[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"}]');let l=(0,a.createContext)({contractService:null,error:null});function d(e){let{children:t}=e,[r,d]=(0,a.useState)(null),[u,h]=(0,a.useState)(null);return(0,a.useEffect)(()=>((async()=>{try{if(void 0===window.ethereum)throw Error("Please install MetaMask to use this application");let e=await window.ethereum.request({method:"eth_requestAccounts"});if(!e||0===e.length)throw Error("Please connect your MetaMask wallet");let t=await window.ethereum.request({method:"eth_chainId"});if(97!==parseInt(t,16))throw Error("Please switch to BSC Testnet (Chain ID: 97)");let r=new i.ZPm(window.ethereum),n=new s(window.ethereum,c),a=await r.eth.getCode(o.xk.TESTNET.LOGIC);if("0x"===a||"0x0"===a)throw Error("Contract not deployed at specified address");d(n),h(null)}catch(e){h(e instanceof Error?e.message:"Failed to initialize contract service"),console.error("Contract initialization error:",e)}})(),window.ethereum&&(window.ethereum.on("chainChanged",()=>{window.location.reload()}),window.ethereum.on("accountsChanged",()=>{window.location.reload()})),()=>{window.ethereum&&(window.ethereum.removeListener("chainChanged",()=>{}),window.ethereum.removeListener("accountsChanged",()=>{}))}),[]),(0,n.jsx)(l.Provider,{value:{contractService:r,error:u},children:t})}function u(){let e=(0,a.useContext)(l);if(void 0===e)throw Error("useContractContext must be used within a ContractProvider");return e}}},function(e){e.O(0,[714,971,69,744],function(){return e(e.s=7990)}),_N_E=e.O()}]);